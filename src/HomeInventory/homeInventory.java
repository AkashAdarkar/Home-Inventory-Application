/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HomeInventory;

import java.awt.event.KeyEvent;
import java.io.*;

import javax.swing.*;
import javax.swing.filechooser.*;
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
import com.toedter.calendar.*;
import java.awt.geom.*;
import java.util.*;
import java.text.*;
import java.awt.print.*;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.awt.print.Printable;



/**
 *
 * @author akash
 */
public class homeInventory extends javax.swing.JFrame
{

    /**
     * Creates new form homeInventory
     */
    
    //maximum entries == max. numbers of the inventory items
    //numberEntries == number of entries in our inventory
    
    
 final int maximumEntries = 300 ;
    int numberEntries ;
    InventoryItem[] myInventory = new InventoryItem[maximumEntries];
    int currentEntry;
    static final int entriesPerPage = 2;
    static int lastPage;
    
    
    
    
    public homeInventory() {
        initComponents();
     
}
    
    
    private void blankValues()
{
// blank input screen
newButton.setEnabled(false);
clearButton.setEnabled(false);
saveButton.setEnabled(true);
printButton.setEnabled(false);
itemTextField.setText("");
locationComboBox.setSelectedItem("");
markedCheckBox.setSelected(false);
serialTextField.setText("");
priceTextField.setText("");
dateDateChooser.setDate(new Date());
storeTextField.setText("");
noteTextField.setText("");
photoTextArea.setText("");
photoLabel.repaint();
itemTextField.requestFocus();

}
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        inventoryToolBar = new javax.swing.JToolBar();
        newButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        clearButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        saveButton = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        printButton = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        ReviewButton = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        exitButton = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        itemTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        locationComboBox = new javax.swing.JComboBox<>();
        markedCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        serialTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        storeTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        noteTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        photoButton = new javax.swing.JButton();
        dateDateChooser = new com.toedter.calendar.JDateChooser();
        priceTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        photoTextArea = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        photoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventory Application");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        inventoryToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        inventoryToolBar.setFloatable(false);
        inventoryToolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        inventoryToolBar.setRollover(true);
        inventoryToolBar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        inventoryToolBar.setMinimumSize(new java.awt.Dimension(89, 346));
        inventoryToolBar.setPreferredSize(new java.awt.Dimension(100, 436));
        inventoryToolBar.setRequestFocusEnabled(false);

        newButton.setIcon(new javax.swing.ImageIcon("/home/akash/NetBeansProjects/Java_MicroProject/Button_images/newfilebtn.jpeg")); // NOI18N
        newButton.setText("New");
        newButton.setToolTipText("Add New Item");
        newButton.setFocusable(false);
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.setPreferredSize(new java.awt.Dimension(70, 50));
        newButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        inventoryToolBar.add(newButton);

        jSeparator1.setBackground(new java.awt.Color(227, 243, 18));
        inventoryToolBar.add(jSeparator1);

        clearButton.setIcon(new javax.swing.ImageIcon("/home/akash/NetBeansProjects/Java_MicroProject/Button_images/deletbtn.jpeg")); // NOI18N
        clearButton.setText("Clear All");
        clearButton.setToolTipText("Clears all entries");
        clearButton.setFocusable(false);
        clearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearButton.setPreferredSize(new java.awt.Dimension(80, 50));
        clearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        inventoryToolBar.add(clearButton);

        jSeparator4.setBackground(new java.awt.Color(227, 243, 18));
        inventoryToolBar.add(jSeparator4);

        saveButton.setIcon(new javax.swing.ImageIcon("/home/akash/NetBeansProjects/Java_MicroProject/Button_images/savefilebtn.jpeg")); // NOI18N
        saveButton.setText("Save");
        saveButton.setToolTipText("Saves current Item");
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setPreferredSize(new java.awt.Dimension(70, 50));
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        inventoryToolBar.add(saveButton);

        jSeparator5.setBackground(new java.awt.Color(227, 243, 18));
        inventoryToolBar.add(jSeparator5);

        printButton.setIcon(new javax.swing.ImageIcon("/home/akash/NetBeansProjects/Java_MicroProject/Button_images/printerbtn.jpeg")); // NOI18N
        printButton.setText("Print");
        printButton.setToolTipText("Prints Iventory Item");
        printButton.setFocusable(false);
        printButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        printButton.setPreferredSize(new java.awt.Dimension(70, 50));
        printButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        inventoryToolBar.add(printButton);

        jSeparator7.setBackground(new java.awt.Color(227, 243, 18));
        inventoryToolBar.add(jSeparator7);

        ReviewButton.setIcon(new javax.swing.ImageIcon("/home/akash/NetBeansProjects/Java_MicroProject/Button_images/reviewbtn.jpeg")); // NOI18N
        ReviewButton.setText("Review");
        ReviewButton.setToolTipText("Prints Iventory Item");
        ReviewButton.setFocusable(false);
        ReviewButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ReviewButton.setPreferredSize(new java.awt.Dimension(70, 50));
        ReviewButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ReviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReviewButtonActionPerformed(evt);
            }
        });
        inventoryToolBar.add(ReviewButton);

        jSeparator9.setBackground(new java.awt.Color(227, 243, 18));
        inventoryToolBar.add(jSeparator9);

        exitButton.setIcon(new javax.swing.ImageIcon("/home/akash/NetBeansProjects/Java_MicroProject/Button_images/exitbtn.jpeg")); // NOI18N
        exitButton.setText("Exit");
        exitButton.setToolTipText("Exits Program");
        exitButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(29, 206, 246), new java.awt.Color(209, 17, 49)));
        exitButton.setFocusable(false);
        exitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitButton.setPreferredSize(new java.awt.Dimension(70, 50));
        exitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        inventoryToolBar.add(exitButton);

        jSeparator8.setBackground(new java.awt.Color(227, 243, 18));
        inventoryToolBar.add(jSeparator8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        getContentPane().add(inventoryToolBar, gridBagConstraints);

        jLabel1.setText("  Inventory Item");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel1, gridBagConstraints);

        itemTextField.setPreferredSize(new java.awt.Dimension(400, 25));
        itemTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTextFieldActionPerformed(evt);
            }
        });
        itemTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemTextFieldKeyPressed(evt);
            }
        });
        getContentPane().add(itemTextField, new java.awt.GridBagConstraints());

        jLabel2.setText("Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(jLabel2, gridBagConstraints);

        locationComboBox.setBackground(new java.awt.Color(244, 232, 232));
        locationComboBox.setEditable(true);
        locationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "under the desk", "in the drawer ", "safe locker", "Bank ", "Garage", "drawing room", " ", " " }));
        locationComboBox.setPreferredSize(new java.awt.Dimension(270, 25));
        locationComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                locationComboBoxFocusGained(evt);
            }
        });
        locationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationComboBoxActionPerformed(evt);
            }
        });
        locationComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                locationComboBoxKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(locationComboBox, gridBagConstraints);

        markedCheckBox.setText("Marked?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(markedCheckBox, gridBagConstraints);

        jLabel3.setText("Serial Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(jLabel3, gridBagConstraints);

        serialTextField.setPreferredSize(new java.awt.Dimension(270, 25));
        serialTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialTextFieldActionPerformed(evt);
            }
        });
        serialTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                serialTextFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(serialTextField, gridBagConstraints);

        jLabel4.setText("Date Purchased");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("Store/Website");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(jLabel5, gridBagConstraints);

        storeTextField.setPreferredSize(new java.awt.Dimension(400, 25));
        storeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeTextFieldActionPerformed(evt);
            }
        });
        storeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                storeTextFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(storeTextField, gridBagConstraints);

        jLabel6.setText("Note");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(jLabel6, gridBagConstraints);

        noteTextField.setPreferredSize(new java.awt.Dimension(400, 25));
        noteTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteTextFieldActionPerformed(evt);
            }
        });
        noteTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noteTextFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(noteTextField, gridBagConstraints);

        jLabel7.setText("Photo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(jLabel7, gridBagConstraints);

        photoButton.setText("....");
        photoButton.setToolTipText("Select File (Image)");
        photoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        photoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(photoButton, gridBagConstraints);

        dateDateChooser.setMinSelectableDate(new java.util.Date(-62135785687000L));
        dateDateChooser.setPreferredSize(new java.awt.Dimension(120, 25));
        dateDateChooser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateDateChooserKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(dateDateChooser, gridBagConstraints);

        priceTextField.setPreferredSize(new java.awt.Dimension(160, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(priceTextField, gridBagConstraints);

        jLabel8.setText("Purchased Price");
        jLabel8.setPreferredSize(new java.awt.Dimension(98, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        getContentPane().add(jLabel8, gridBagConstraints);

        photoTextArea.setEditable(false);
        photoTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        photoTextArea.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(photoTextArea, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ITEM PHOTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18), new java.awt.Color(19, 230, 21))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        photoLabel.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(photoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addGap(20, 20, 20)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(photoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
                  PrinterJob job = PrinterJob.getPrinterJob();
            job.setJobName("Print Data");
            
            job.setPrintable(new Printable(){
            public int print(Graphics pg,PageFormat pf, int pageNum){
                    pf.setOrientation(PageFormat.LANDSCAPE);
                 if(pageNum>0){
                    return Printable.NO_SUCH_PAGE;
                }
                
                Graphics2D g2 = (Graphics2D)pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(0.24,0.24);
                ReviewPanel  review = new ReviewPanel();
                review.jPanel1.paint(g2);
//          
               
                return Printable.PAGE_EXISTS;
                         
                
            }
    });
         
        boolean ok = job.printDialog();
        if(ok){
        try{
            
        job.print();
        }
        catch (PrinterException ex){}
        }    
    }//GEN-LAST:event_printButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
               System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void locationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationComboBoxActionPerformed
        
    }//GEN-LAST:event_locationComboBoxActionPerformed

    private void itemTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTextFieldActionPerformed

    }//GEN-LAST:event_itemTextFieldActionPerformed

    private void serialTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialTextFieldActionPerformed
        
    }//GEN-LAST:event_serialTextFieldActionPerformed

    private void storeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeTextFieldActionPerformed

    }//GEN-LAST:event_storeTextFieldActionPerformed

    private void noteTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteTextFieldActionPerformed
        
    }//GEN-LAST:event_noteTextFieldActionPerformed

    private void locationComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationComboBoxFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_locationComboBoxFocusGained

    private void itemTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemTextFieldKeyPressed
        newButton.setEnabled(true);
                clearButton.setEnabled(true);
                saveButton.setEnabled(true);
                printButton.setEnabled(true);
                markedCheckBox.setSelected(true);
                dateDateChooser.setDate(new Date());
                    photoLabel.repaint();
                     itemTextField.requestFocus();
        if (evt.getKeyCode()== KeyEvent.VK_ENTER)
            
             locationComboBox.requestFocus();
               
            
    }//GEN-LAST:event_itemTextFieldKeyPressed

    private void locationComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_locationComboBoxKeyPressed
       if (evt.getKeyCode()== KeyEvent.VK_ENTER)
              serialTextField.requestFocus();
    }//GEN-LAST:event_locationComboBoxKeyPressed

    private void serialTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serialTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            priceTextField.requestFocus();
    }//GEN-LAST:event_serialTextFieldKeyPressed

    private void dateDateChooserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateDateChooserKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER)
           storeTextField.requestFocus();
    }//GEN-LAST:event_dateDateChooserKeyPressed

    private void storeTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_storeTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            noteTextField.requestFocus();
    }//GEN-LAST:event_storeTextFieldKeyPressed

    private void noteTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteTextFieldKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER)
           dateDateChooser.requestFocus();
    }//GEN-LAST:event_noteTextFieldKeyPressed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        blankValues();
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
     String  inven_name   = itemTextField.getText().toString();
      String  location  = locationComboBox.getSelectedItem().toString();
      String  marked  = markedCheckBox.getText().toString();
      String  serialno   = serialTextField.getText().toString();
      String  price   = priceTextField.getText().toString();
      String date = dateDateChooser.getDate().toString();
      String  store   = storeTextField.getText().toString();
      String  note   = noteTextField.getText().toString();
      String  photo   = photoTextArea.getText().toString();
      String file = "/home/akash/NetBeansProjects/Java_MicroProject/details.txt";
      //
      
        
        try
        {
            FileWriter Writer = new FileWriter(file,true);
            itemTextField.write(Writer);
            Writer.write(" ");
           // locationComboBox.write(Writer);
            Writer.write(" ");
            //markedCheckBox.write(Writer);
            //Writer.write("");
            serialTextField.write(Writer);
            Writer.write(" ");
            priceTextField.write(Writer);
            Writer.write(" ");
            //dateDateChooser.write(Writer);
            Writer.write(" ");
            storeTextField.write(Writer);
            Writer.write(" ");
           noteTextField.write(Writer);
           Writer.write(" ");
            photoTextArea.write(Writer);
            Writer.write(" ");
                 
            Writer.write(System.lineSeparator());
           // BufferedWriter bobj = new BufferedWriter(Writer);
            /*Writer.write(" "+ name+" "+age); 
            Writer.write(System.getProperty("line.seperator"));
            //bobj.flush();*/
            Writer.close();
            JOptionPane.showMessageDialog(null,"Succes");
            setVisible(false);
            new homeInventory().setVisible(true);
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(rootPane,"Error");
        }
      
       
    }//GEN-LAST:event_saveButtonActionPerformed

    private void photoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoButtonActionPerformed

        String flag = evt.getActionCommand();
         JFileChooser jc = new JFileChooser();
        jc.showOpenDialog(null);
        File f = jc.getSelectedFile();
        String filename = f.getAbsolutePath();
        photoTextArea.setText(filename);
        Image getAbsolutePath =null;
        
         
        ImageIcon icon = new ImageIcon(filename);
        Image image = icon.getImage().getScaledInstance(photoLabel.getWidth(),photoLabel.getHeight(),Image.SCALE_SMOOTH);
      photoLabel.setIcon(icon);
       
    }//GEN-LAST:event_photoButtonActionPerformed

    private void ReviewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReviewButtonActionPerformed
        ReviewPanel  review = new ReviewPanel();
        review.setVisible(true);
         review.name.setText(homeInventory.itemTextField.getText());
          review.loc.setText(homeInventory.locationComboBox.getSelectedItem().toString());   
          review.serial_no.setText(homeInventory.serialTextField.getText());
          review.price.setText(homeInventory.priceTextField.getText()+"Rs"); 
          review.store.setText(homeInventory.storeTextField.getText());
          review.note.setText(homeInventory.noteTextField.getText());
          review.image.setText(homeInventory.photoTextArea.getText());
          review.date.setText(homeInventory.dateDateChooser.getDate().toString());
         review.jLabel10.setIcon(homeInventory.photoLabel.getIcon());
        review.jLabel10.setText("");
        //review.printDate.get();
    }//GEN-LAST:event_ReviewButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        itemTextField.setText("");
       // locationComboBox.getSelectedItem().toString();   
        serialTextField.setText("");
        priceTextField.setText("");
         storeTextField.setText("");
        noteTextField.setText(" ");
        //photoTextArea.setText("Apple");
        //dateDateChooser
       //photoLabel.setText("Apple");
    }//GEN-LAST:event_clearButtonActionPerformed
    
    
  
    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             new homeInventory().setVisible(true);
           
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReviewButton;
    private javax.swing.JButton clearButton;
    public static com.toedter.calendar.JDateChooser dateDateChooser;
    public static javax.swing.JButton exitButton;
    private javax.swing.JToolBar inventoryToolBar;
    public static javax.swing.JTextField itemTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    public static javax.swing.JComboBox<String> locationComboBox;
    public static javax.swing.JCheckBox markedCheckBox;
    private javax.swing.JButton newButton;
    public static javax.swing.JTextField noteTextField;
    private javax.swing.JButton photoButton;
    public static javax.swing.JLabel photoLabel;
    public static javax.swing.JTextField photoTextArea;
    public static javax.swing.JTextField priceTextField;
    private javax.swing.JButton printButton;
    private javax.swing.JButton saveButton;
    public static javax.swing.JTextField serialTextField;
    public static javax.swing.JTextField storeTextField;
    // End of variables declaration//GEN-END:variables

    
   
     
}




